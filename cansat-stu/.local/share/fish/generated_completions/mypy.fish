# mypy
# Autogenerated from man page /usr/share/man/man1/mypy.1.gz
complete -c mypy -s m -l module --description 'Asks mypy to type check the provided module.'
complete -c mypy -s p -l package --description 'Asks mypy to type check the provided package.'
complete -c mypy -s c -l command --description 'Asks mypy to type check the provided string as a program.'
complete -c mypy -l exclude --description 'A regular expression that matches file names, directory names and paths which…'
complete -c mypy -s h -l help --description 'Show help message and exit.'
complete -c mypy -s v -l verbose --description 'More verbose messages.'
complete -c mypy -s V -l version --description 'Show program\\(aqs version number and exit.'
complete -c mypy -l config-file --description 'This flag makes mypy read configuration settings from the given file.'
complete -c mypy -l warn-unused-configs --description 'This flag makes mypy warn about unused [mypy-<pattern>] config file sections.'
complete -c mypy -l namespace-packages --description 'This flag enables import discovery to use namespace packages (see \\%PEP 420).'
complete -c mypy -l explicit-package-bases --description 'This flag tells mypy that top-level packages will be based in either the curr…'
complete -c mypy -l ignore-missing-imports --description 'This flag makes mypy ignore all missing imports.'
complete -c mypy -l follow-imports --description 'This flag adjusts how mypy follows imported modules that were not explicitly …'
complete -c mypy -l python-executable --description 'This flag will have mypy collect type information from \\%PEP 561 compliant pa…'
complete -c mypy -l no-site-packages --description 'This flag will disable searching for \\%PEP 561 compliant packages.'
complete -c mypy -l no-silence-site-packages --description 'By default, mypy will suppress any error messages generated within \\%PEP 561 …'
complete -c mypy -l python-version --description 'This flag will make mypy type check your code as if it were run under Python …'
complete -c mypy -s 2 -l py2 --description 'Equivalent to running --python-version 2. 7.'
complete -c mypy -l platform --description 'This flag will make mypy type check your code as if it were run under the giv…'
complete -c mypy -l always-true --description 'This flag will treat all variables named NAME as compile-time constants that …'
complete -c mypy -l always-false --description 'This flag will treat all variables named NAME as compile-time constants that …'
complete -c mypy -l disallow-any-unimported --description 'This flag disallows usage of types that come from unfollowed imports (such ty…'
complete -c mypy -l disallow-any-expr --description 'This flag disallows all expressions in the module that have type Any.'
complete -c mypy -l disallow-any-decorated --description 'This flag disallows functions that have Any in their signature after decorato…'
complete -c mypy -l disallow-any-explicit --description 'This flag disallows explicit Any in type positions such as type annotations a…'
complete -c mypy -l disallow-any-generics --description 'This flag disallows usage of generic types that do not specify explicit type …'
complete -c mypy -l disallow-subclassing-any --description 'This flag reports an error whenever a class subclasses a value of type Any.'
complete -c mypy -l disallow-untyped-calls --description 'This flag reports an error whenever a function with type annotations calls a …'
complete -c mypy -l disallow-untyped-defs --description 'This flag reports an error whenever it encounters a function definition witho…'
complete -c mypy -l disallow-incomplete-defs --description 'This flag reports an error whenever it encounters a partly annotated function…'
complete -c mypy -l check-untyped-defs --description 'This flag is less severe than the previous two options -- it type checks the …'
complete -c mypy -l disallow-untyped-decorators --description 'This flag reports an error whenever a function with type annotations is decor…'
complete -c mypy -l no-implicit-optional --description 'This flag causes mypy to stop treating arguments with a None default value as…'
complete -c mypy -l no-strict-optional --description 'This flag disables strict checking of Optional types and None values.'
complete -c mypy -l warn-redundant-casts --description 'This flag will make mypy report an error whenever your code uses an unnecessa…'
complete -c mypy -l warn-unused-ignores --description 'This flag will make mypy report an error whenever your code uses a # type: ig…'
complete -c mypy -l no-warn-no-return --description 'By default, mypy will generate errors when a function is missing return state…'
complete -c mypy -l warn-return-any --description 'This flag causes mypy to generate a warning when returning a value with type …'
complete -c mypy -l warn-unreachable --description 'This flag will make mypy report an error whenever it encounters code determin…'
complete -c mypy -l allow-untyped-globals --description 'This flag causes mypy to suppress errors caused by not being able to fully in…'
complete -c mypy -l allow-redefinition --description 'By default, mypy won\\(aqt allow a variable to be redefined with an unrelated …'
complete -c mypy -l local-partial-types --description 'In mypy, the most common cases for partial types are variables initialized us…'
complete -c mypy -l no-implicit-reexport --description 'By default, imported values to a module are treated as exported and mypy allo…'
complete -c mypy -l strict-equality --description 'By default, mypy allows always-false comparisons like 42 == \\(aqno\\(aq.'
complete -c mypy -l strict --description 'This flag mode enables all optional error checking flags.'
complete -c mypy -l disable-error-code --description 'This flag allows disabling one or multiple error codes globally.  NDENT 7.'
complete -c mypy -l enable-error-code --description 'This flag allows enabling one or multiple error codes globally.'
complete -c mypy -l show-error-context --description 'This flag will precede all errors with "note" messages explaining the context…'
complete -c mypy -l show-column-numbers --description 'This flag will add column offsets to error messages.'
complete -c mypy -l show-error-codes --description 'This flag will add an error code [<code>] to error messages.'
complete -c mypy -l pretty --description 'Use visually nicer output in error messages: use soft word wrap, show source …'
complete -c mypy -l no-color-output --description 'This flag will disable color output in error messages, enabled by default.'
complete -c mypy -l no-error-summary --description 'This flag will disable error summary.'
complete -c mypy -l show-absolute-path --description 'Show absolute paths to files.'
complete -c mypy -l no-incremental --description 'This flag disables incremental mode: mypy will no longer reference the cache …'
complete -c mypy -l cache-dir --description 'By default, mypy stores all cache data inside of a folder named .'
complete -c mypy -l sqlite-cache --description 'Use an \\%SQLite database to store the cache.'
complete -c mypy -l cache-fine-grained --description 'Include fine-grained dependency information in the cache for the mypy daemon.'
complete -c mypy -l skip-version-check --description 'By default, mypy will ignore cache data generated by a different version of m…'
complete -c mypy -l skip-cache-mtime-checks --description 'Skip cache internal consistency checks based on mtime.'
complete -c mypy -l pdb --description 'This flag will invoke the Python debugger when mypy encounters a fatal error.'
complete -c mypy -l show-traceback -l tb --description 'If set, this flag will display a full traceback when mypy encounters a fatal …'
complete -c mypy -l raise-exceptions --description 'Raise exception on fatal error.'
complete -c mypy -l custom-typing-module --description 'This flag lets you use a custom module as a substitute for the typing module.'
complete -c mypy -l custom-typeshed-dir --description 'This flag specifies the directory where mypy looks for typeshed stubs, instea…'
complete -c mypy -l warn-incomplete-stub --description 'This flag modifies both the --disallow-untyped-defs and --disallow-incomplete…'
complete -c mypy -l shadow-file --description 'When mypy is asked to type check SOURCE_FILE, this flag makes mypy read from …'
complete -c mypy -l any-exprs-report --description 'Causes mypy to generate a text file report documenting how many expressions o…'
complete -c mypy -l cobertura-xml-report --description 'Causes mypy to generate a Cobertura XML type checking coverage report.'
complete -c mypy -l html-report -l xslt-html-report --description 'Causes mypy to generate an HTML type checking coverage report.'
complete -c mypy -l linecount-report --description 'Causes mypy to generate a text file report documenting the functions and line…'
complete -c mypy -l linecoverage-report --description 'Causes mypy to generate a JSON file that maps each source file\\(aqs absolute …'
complete -c mypy -l lineprecision-report --description 'Causes mypy to generate a flat text file report with per-module statistics of…'
complete -c mypy -l txt-report -l xslt-txt-report --description 'Causes mypy to generate a text file type checking coverage report.'
complete -c mypy -l xml-report --description 'Causes mypy to generate an XML type checking coverage report.'
complete -c mypy -l junit-xml --description 'Causes mypy to generate a JUnit XML test result document with type checking r…'
complete -c mypy -l find-occurrences --description 'This flag will make mypy print out all usages of a class member based on stat…'
complete -c mypy -l scripts-are-modules --description 'This flag will give command line arguments that appear to be scripts (i. e.'

